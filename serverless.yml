service: triangle-api

configValidationMode: error

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-api-gateway-throttling
custom:
  stage: ${opt:stage, self:provider.stage}
  environment: ${file(./env.yml):${self:custom.stage}, file(./env.yml):default}
  webpack:
    excludeFiles: "./test/*.ts"
    individually: true
    packager: npm
    includeModules:
      packagePath: "./package.json"

provider:
  name: aws
  runtime: nodejs14.x
  region: ${self:custom.environment.REGION}

  environment:
    stage: ${self:custom.stage}
    AWS_DYNAMO_ACCESS_KEY: ${self:custom.environment.AWS_DYNAMO_ACCESS_KEY}
    AWS_DYNAMO_SECRET_KEY: ${self:custom.environment.AWS_DYNAMO_SECRET_KEY}
    MAIN_TABLE: ${self:custom.environment.MAIN_TABLE}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchWriteItem
          Resource:
            - "Fn::ImportValue": ${self:custom.stage}-MainTableTriangleArn
      managedPolicies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess

functions:
  calculateTriangle:
    handler: src/api/controllers/triangleController.calculateTriangle
    description: Receives a json body containing three sizes of a triangle the returns the type of according to the sizes
    events:
      - http:
          path: triangle
          method: post
          request:
            schemas:
              application/json: ${file(./resources/validations/triangle.json)}
          throttling:
            maxRequestsPerSecond: 2000
  listInteractions:
    handler: src/api/controllers/interactionController.listInteractions
    description: Returns a list of interactions containing the lasts request triangle calculation
    events:
      - http:
          path: interactions
          method: get
